{"version":3,"sources":["comp/Card.js","_allStates.js","comp/selectIntterrupt.js","comp/interruptRequest.js","comp/IDT_dialog.js","comp/interruptStage.js","App.js","serviceWorker.js","index.js"],"names":["SimpleCard","props","MainColor","on","Card","style","height","width","backgroundColor","fill","paused","options","amplitude","speed","points","CardContent","title","description","align","marginTop","IconButton","aria-label","color","ALL_STATE_VALS","nums","id","disc","apic","cpu","process","psw","pc","pcb","HWinterrupt","useStyles","makeStyles","avatar","SelectInterrupt","classes","Dialog","open","count","DialogTitle","List","map","type","i","ListItem","button","onClick","setInterrupt","plusCount","key","ListItemAvatar","Avatar","className","ListItemText","primary","window","innerWidth","innerHeight","page","display","alignItems","justifyContent","InterruptRequest","states","interrupt","lightOn","n","some","item","index","src","alt","fontSize","tablerow","ViewIDT","topen","Button","variant","aria-labelledby","aria-describedby","DialogContent","Divider","Tablerow","main","num","DialogActions","autoFocus","column","InterruptStage","logo","position","buttonGroup","footer","marginRight","marginLeft","Page","App","React","useState","setCount","minusCount","length","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2bb705c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Wave from 'react-wavify'\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n\r\n  const MainColor = props.on?'#3F51B5':\"#ddd\";\r\n  \r\n  return (\r\n\r\n      <Card >\r\n        <div style={{height:20,width:300,backgroundColor:MainColor}}/>\r\n        {\r\n          props.on?\r\n          <div style={{backgroundColor:MainColor,height:30,width:300}}>\r\n          <Wave fill={'#fff'}\r\n          paused={false}\r\n          options={{\r\n            height: 5,\r\n            amplitude: 5,\r\n            speed: 0.5,\r\n            points: 3\r\n          }}/></div>:\r\n          <div style={{backgroundColor:MainColor,height:15,width:300}}/>\r\n        }\r\n        <CardContent>\r\n          {\r\n            props.on?\r\n            <div>\r\n              <h2>{props.title}</h2>        \r\n              <p> {props.description}</p>\r\n            </div>\r\n            :\r\n            <div>\r\n              <h3>{props.title}</h3>        \r\n              <p> {props.description}</p>\r\n            </div>\r\n          }\r\n          \r\n        </CardContent>\r\n        <div align=\"right\" style={{marginTop:-50}}>\r\n           <IconButton  aria-label=\"settings\">\r\n            <CodeIcon style={{color:props.on?'#3F51B5':\"#ddd\"}}/>\r\n          </IconButton>\r\n        </div>\r\n      </Card>\r\n\r\n  );\r\n}","export function ALL_STATE_VALS(nums){\r\n  return([\r\n    { id: 0, \r\n      title:\"인터럽트 발생!\", \r\n      disc: \"외부장치가 APIC에게 인터럽트를 보냅니다\",\r\n      apic:\"→인터럽트\",\r\n      cpu:\"-\"\r\n    },\r\n      { id: 1, \r\n        title:\"인터럽트 발생!\", \r\n        disc: \"외부장치가 APIC에게 인터럽트를 보냅니다\",\r\n        apic:\"→인터럽트\",\r\n        cpu:\"-\"\r\n      },\r\n      { id: 2, \r\n        title:\"인터럽트 요청검사\", \r\n        disc: \"인터럽트를 받은 APIC는 CPU에게 INTR(Interrupt Request)을 보냅니다.\",\r\n        apic:\"INTR→\",\r\n        cpu:\"→INTR\"\r\n      },\r\n      { id: 3, \r\n        title:\"인터럽트 요청검사\", \r\n        disc: \"진행중이던 사이클을 끝낸 후 INTR을 확인하고, INTR이 있다면 인터럽트 단계를 시작합니다.\",\r\n        apic:\"-\",\r\n        cpu:\"INTR Check!\"\r\n      },\r\n      { id: 4, \r\n        title:\"인터럽트 단계\", \r\n        disc: \"APIC에게 INTA(Interrupt Acknowledge)를 보냅니다.\",\r\n        apic:\"INTA←\",\r\n        cpu:\"←INTA\"\r\n      },\r\n      { id: 5, \r\n        title:\"인터럽트 단계\", \r\n        disc: \"APIC은 INTA를 확인하고 인터럽트 벡터를 CPU에게 보냅니다\",\r\n        apic:\"인터럽트 벡터→\",\r\n        cpu:\"→인터럽트 벡터\"\r\n      },\r\n      { \r\n        id: 6, \r\n        title:\"인터럽트 단계\", \r\n        disc: \"인터럽트 서비스 루틴 실행을 위한 준비 시작\" ,\r\n        process:{psw:'#data'},\r\n        pc:'#address',\r\n        pcb:{pc:'54',pcb:'54'}\r\n      },\r\n      { \r\n        id: 7, \r\n        title:\"인터럽트 단계\", \r\n        disc: \"PCB에 복귀주소(PC)와 현재 CPU의 레지스터에 저장되어 있는 실행중이던 프로세스의 정보를 저장\" ,\r\n        process:{psw:'#data'},\r\n        pc:'#address',\r\n        pcb:{pc:'#address',psw:'#data'}\r\n      },\r\n      { \r\n        id: 8, \r\n        title:\"인터럽트 단계\", \r\n        disc: \"인터럽트 벡터를 참조하여 인터럽트벡터테이블에서 ISR위치를 찾는다.\" ,\r\n        process:{psw:'-'},\r\n        pc:'-',\r\n        pcb:{pc:'#address',psw:'#data'}\r\n      },\r\n      { \r\n        id: 9, \r\n        title:\"인터럽트 단계\", \r\n        disc: \"PC에 ISR위치 입력\" ,\r\n        process:{psw:'-'},\r\n        pc:`#${nums}`,\r\n        pcb:{pc:'#address',psw:'#data'}\r\n      },\r\n      { id: 10, \r\n        title:\"인터럽트 서비스 루틴\", \r\n        disc: \"ISR실행\" ,\r\n        process:{psw:`#${nums}`,},\r\n        pc:'-',\r\n        pcb:{pc:'#address',psw:'#data'}\r\n      },\r\n      { id: 11,\r\n        title:\"인터럽트 리턴\", \r\n        disc: \"PSW와 PC가 복구됨\" ,\r\n        process:{psw:'#data'},\r\n        pc:'#address',\r\n        pcb:{pc:'-',psw:'-'}\r\n      },\r\n      { id: 12, \r\n        title:\"인터럽트 리턴\", \r\n        disc: \"복귀\" ,\r\n        process:{psw:'#data'},\r\n        pc:'#address',\r\n        pcb:{pc:'-',psw:'-'}\r\n      },\r\n    ]);\r\n  }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\r\n\r\nconst HWinterrupt = [\r\n    '타이머', \r\n    '키보드', \r\n    'PIC cascading',\r\n    'second serial port',\r\n    'first serial port', \r\n    '플로피 디스크', \r\n    '시스템 클록',\r\n    '네트워크 인터페이스',\r\n    'USB포트, 사운드카드',\r\n    'PS/2 마우스',\r\n    'math coprocessor',\r\n    'EIDE 디스크 컨트롤러1',\r\n    'EIDE 디스크 컨트롤러2',\r\n];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: '#ddd',\r\n    color: '#3F51B5',\r\n  },\r\n});\r\n\r\n\r\nexport default function SelectInterrupt(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.count}>\r\n      <DialogTitle >Select HW Interrupt</DialogTitle>\r\n      <List>\r\n        {HWinterrupt.map((type,i) => (\r\n          <ListItem button onClick={() => {props.setInterrupt(i+32);props.plusCount()}} key={type}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <ScreenShareIcon/>\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={type} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SimpleCard from './Card';\r\nimport {ALL_STATE_VALS} from '../_allStates';\r\nimport SelectInterrupt from './selectIntterrupt';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\n\r\nlet width = window.innerWidth;\r\nlet height = window.innerHeight;\r\n\r\nconst useStyles = makeStyles({\r\n  page:{\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height:height*0.8\r\n  },\r\n});\r\n\r\nexport default function InterruptRequest(props) {\r\n  const classes = useStyles();\r\n  const count = props.count\r\n  const states =  ALL_STATE_VALS(props.interrupt);\r\n\r\n  const lightOn=(n)=>{\r\n    if(n.some(function(item, index) { return item === count; })) return true; \r\n    else return false;\r\n  }\r\n\r\n    return (\r\n      <div className={classes.page}>\r\n        <SelectInterrupt setInterrupt={props.setInterrupt} plusCount={props.plusCount} count={lightOn([0])}/>\r\n        {\r\n          lightOn([1])?\r\n          <img width={100} height={100} src={\"hardware2.png\"} alt=\"hardware\"/>:\r\n          <img width={100} height={100} src={\"hardware.png\"} alt=\"hardware\"/>\r\n        }\r\n        <ArrowRightIcon fontSize=\"large\" color={lightOn([1])?\"primary\":\"disabled\"}/>\r\n        <SimpleCard on={lightOn([1,2,4,5])} title={\"APIC\"} description={<div>{states[count].apic}</div>} />\r\n        {\r\n          lightOn([4])?\r\n          <ArrowLeftIcon fontSize=\"large\" color=\"primary\"/>:\r\n          <ArrowRightIcon fontSize=\"large\" color={lightOn([2,5])?\"primary\":\"disabled\"}/>\r\n        }\r\n        <SimpleCard on={lightOn([2,3,4,5])} title={\"CPU\"} description={<div>{states[count].cpu}</div>}/>       \r\n      </div>\r\n    );\r\n  }\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles({\r\n  tablerow:{\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width:100,\r\n    height:50\r\n  },\r\n});\r\n\r\nexport default function ViewIDT(props) {\r\n\r\nconst topen = props.count;\r\n\r\n  return (\r\n    <div align=\"center\">\r\n      <Button variant=\"outlined\" color=\"primary\" >\r\n        IDT\r\n      </Button>\r\n      <Dialog\r\n        open={topen}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <div align=\"center\" style={{width:300}}>\r\n            <p>Interrupt Description Table</p>\r\n        </div>\r\n        <DialogContent>\r\n           <Divider/>\r\n           <Tablerow main={false} num={props.interrupt-1}/>\r\n           <Tablerow main={true} num={props.interrupt}/>\r\n           <Tablerow main={false} num={props.interrupt+1}/>\r\n           <Divider/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.plusCount} color=\"primary\" autoFocus>\r\n            Pass to PC\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Tablerow(props){\r\n  const classes = useStyles();\r\n  const {num,main} = props;\r\n\r\n  return(\r\n    <div style={{display:'flex',backgroundColor:main?\"#3F51B5\":\"#fff\"}}>\r\n      <div className={classes.tablerow}>\r\n          {main?<b>{num}</b>:<p>{num}</p>}\r\n      </div>\r\n      <div className={classes.tablerow}>\r\n          {main?<b>{`#${num}`}</b>:<p>{`#${num}`}</p>}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SimpleCard from './Card';\r\nimport ViewIDT from './IDT_dialog'\r\nimport {ALL_STATE_VALS} from '../_allStates';\r\n\r\nlet width = window.innerWidth;\r\nlet height = window.innerHeight;\r\n\r\nconst useStyles = makeStyles({\r\n    column:{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width:width*0.5,\r\n    },\r\n});\r\n\r\nexport default function InterruptStage(props) {\r\n    const classes = useStyles();\r\n    const count = props.count;\r\n    \r\n    const states =  ALL_STATE_VALS(props.interrupt);\r\n\r\n    const lightOn=(n)=>{\r\n        return n.some(function(item, index) { return item === count; })\r\n      }\r\n    \r\n    return (\r\n      <div style={{display:'flex',height:height*0.8}}>\r\n  \r\n        <div className={classes.column}>\r\n          <SimpleCard on={lightOn([6,10,11,12])} title={\"Process\"} description={\r\n              <div>\r\n                <p>PSW : {states[count].process.psw}</p>               \r\n              </div>}/>\r\n        </div>\r\n\r\n        <div className={classes.column}>\r\n            <div>\r\n            <ViewIDT interrupt={props.interrupt} plusCount={props.plusCount} count={lightOn([8])}/>\r\n            <br/>\r\n            <SimpleCard on={lightOn([6,9,11])} title={\"PC\"} description={<div>{states[count].pc}</div>} />\r\n            <br/>\r\n            <SimpleCard on={lightOn([7])} title={\"PCB\"} description={\r\n              <div>\r\n                <p>Program Counter : {states[count].pcb.pc}</p>\r\n                <p>Contents of Regsters : {states[count].pcb.psw}</p>\r\n              </div>}/>\r\n            </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InterruptRequest from './comp/interruptRequest'; \nimport InterruptStage from './comp/interruptStage'; \nimport {ALL_STATE_VALS} from './_allStates';\n\n\nimport './App.css';\n// https://m.blog.naver.com/qbxlvnf11/221350931159\n// https://whatisthenext.tistory.com/147\n\n// https://blog.naver.com/songblue61/221493816235\n// https://sanghyunj.tistory.com/15\n// https://jhnyang.tistory.com/33\n// https://hack-gogumang.tistory.com/255\n// https://velog.io/@adam2/2020-01-08-2301-%EC%9E%91%EC%84%B1%EB%90%A8-huk55f3cic\n// https://haloworld.tistory.com/70\n// https://rusy.tistory.com/entry/%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8interrupt\nlet width = window.innerWidth;\nlet height = window.innerHeight;\n\nconst useStyles = makeStyles({\n  logo:{\n    position:'absolute'\n  },\n  description:{\n    width:width*0.8,\n  },\n  buttonGroup:{\n    width:width*0.2,\n    display:'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  footer:{\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height:height*0.2\n  },\n  index:{\n    marginRight:10,\n    marginLeft:10\n  }\n});\n\n\nfunction App() {\n  const classes = useStyles();\n  let [count, setCount] = React.useState(0);\n  let [interrupt, setInterrupt] = React.useState(0);\n  const states =  ALL_STATE_VALS(interrupt);\n\n  const plusCount=()=>{\n    if(count ===12) return;\n    setCount(++count);\n  };\n  const minusCount=()=>{\n    if(count ===0) return;\n    setCount(--count);\n  };\n\n    return (\n      <div>\n        <div className={classes.logo}><img src=\"logo.png\" alt=\"logo\"/></div>\n          <Page interrupt={interrupt} setInterrupt={setInterrupt} minusCount={minusCount} plusCount={plusCount} count={count}/>\n        <div className={classes.footer}> \n            <div className={classes.description} align=\"center\">\n              <p>{states[count].disc}</p>\n              <h1>{states[count].title}</h1>\n            </div>\n            <div className={classes.buttonGroup}>\n              <div onClick={minusCount}><img width={30} height={30} src={count===0?\"prev2.png\":\"prev1.png\"} alt=\"prev\"/></div>\n              <div className={classes.index}><h1>{states[count].id}</h1></div>\n              <div onClick={plusCount}><img width={30} height={30}  src={count===states.length?\"next2.png\":\"next1.png\"} alt=\"next\"/></div>\n          </div>      \n        </div>\n      </div>\n    )\n \n  }\n\n\nfunction Page(props) {\n\n    return(\n        props.count < 6?\n        <InterruptRequest setInterrupt={props.setInterrupt} plusCount={props.plusCount} count={props.count}/>:\n        <InterruptStage interrupt={props.interrupt} plusCount={props.plusCount} count={props.count}/>\n    )\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}